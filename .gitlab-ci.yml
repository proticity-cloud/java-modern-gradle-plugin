variables:
  DOCKER_DRIVER: overlay2

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - export M2_HOME=`pwd`/.m2

cache:
  paths:
    - .gradle

stages:
  - build
  - test
  - deploy

# Build and cache build results and publication
build-jdk8:
  stage: build
  image: openjdk:8-jdk-slim
  script:
    - ./gradlew -i -S downloadLicenses test assemble publishPluginMavenPublicationToMavenLocal
  artifacts:
    paths:
      - build
    expire_in: 1 hour

build-jdk11:
  stage: build
  image: openjdk:11-jdk-slim
  script:
    - ./gradlew -i -S downloadLicenses test assemble publishPluginMavenPublicationToMavenLocal
  allow_failure: true

# Testing configurations
.test-jdk8: &test-jdk8
  dependencies:
    - build-jdk8
  script:
    - mkdir -p ~/.gradle/caches
    - find ~/.gradle/caches/ -type d -name 'org.proticity.gradle' -prune -exec rm -rf "{}" \; -print
    - ./gradlew -i -S assemble publishPluginMavenPublicationToMavenLocal
    - cd jdk8-sample-project
    - ./gradlew -i -S assemble spotbugsMain publishMainPublicationToMavenLocal
  cache:
    paths:
      - .gradle
    policy: pull

.test-jdk11: &test-jdk11
  dependencies:
    - build-jdk8
  script:
    - mkdir -p ~/.gradle/caches
    - find ~/.gradle/caches/ -type d -name 'org.proticity.gradle' -prune -exec rm -rf "{}" \; -print
    - ./gradlew -i -S assemble publishPluginMavenPublicationToMavenLocal
    - cd jdk8-sample-project
    - ./gradlew -i -S assemble spotbugsMain publishMainPublicationToMavenLocal
    - cd ../jdk11-sample-project
    - ./gradlew -i -S assemble spotbugsMain publishMainPublicationToMavenLocal
  cache:
    paths:
      - .gradle
    policy: pull

test-jdk8-oracle:
  stage: test
  image: openjdk:8-jdk-slim
  <<: *test-jdk8

test-jdk11-oracle:
  stage: test
  image: openjdk:11-jdk-slim
  <<: *test-jdk11

test-jdk12-oracle:
  stage: test
  image: openjdk:12-jdk-oracle
  <<: *test-jdk11

test-jdk13ea-oracle:
  stage: test
  image: openjdk:13-jdk-oracle
  allow_failure: true
  <<: *test-jdk11

test-jdk8-adoptopenjdk:
  stage: test
  image: adoptopenjdk/openjdk8:alpine-slim
  <<: *test-jdk8

test-jdk11-adoptopenjdk:
  stage: test
  image: adoptopenjdk/openjdk11:alpine-slim
  <<: *test-jdk11

test-jdk12-adoptopenjdk:
  stage: test
  image: adoptopenjdk/openjdk12:alpine-slim
  <<: *test-jdk11

test-jdk8-openj9:
  stage: test
  image: adoptopenjdk/openjdk8-openj9:alpine-slim
  <<: *test-jdk8

test-jdk11-openj9:
  stage: test
  image: adoptopenjdk/openjdk11-openj9:alpine-slim
  <<: *test-jdk11

test-jdk12-openj9:
  stage: test
  image: adoptopenjdk/openjdk12-openj9:alpine-slim
  <<: *test-jdk11

test-jdk8-corretto:
  stage: test
  image: amazoncorretto:8
  <<: *test-jdk8

test-jdk11-corretto:
  stage: test
  image: amazoncorretto:11
  <<: *test-jdk11

test-jdk8-zulu:
  stage: test
  image: azul/zulu-openjdk:8
  <<: *test-jdk8

test-jdk11-zulu:
  stage: test
  image: azul/zulu-openjdk:11
  <<: *test-jdk11

test-jdk12-zulu:
  stage: test
  image: azul/zulu-openjdk:12
  <<: *test-jdk11

test-jdk8-liberica:
  stage: test
  image: bellsoft/liberica-openjdk-alpine:8
  <<: *test-jdk8

test-jdk11-liberica:
  stage: test
  image: bellsoft/liberica-openjdk-alpine:11
  <<: *test-jdk11

test-jdk12-liberica:
  stage: test
  image: bellsoft/liberica-openjdk-alpine:12
  <<: *test-jdk11

test-jdk11-sap:
  stage: test
  image: sapmachine/lts:latest
  <<: *test-jdk11

test-jdk12-sap:
  stage: test
  image: sapmachine/stable:latest
  <<: *test-jdk11

# Build final result and deploy
pages:
  stage: deploy
  image: openjdk:8-jdk-slim
  dependencies:
    - build-jdk8
  script:
    - ./gradlew -i -S -Dgradle.publish.key=${GRADLE_PLUGIN_PUBLISH_KEY} -Dgradle.publish.secret=${GRADLE_PLUGIN_PUBLISH_SECRET} assemble publishPlugins
    - mkdir public
    - mv build/docs/groovydoc public/apidocs
  artifacts:
    paths:
      - build/libs
      - build/publications
      - public
  only:
    refs:
      - master
